plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.4'
	//id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}
repositories {
	mavenCentral()
}

//def querydslSrcDir = 'src/main/generated'
//sourceSets {
//	main {
//		java {
//			srcDirs = ['src/main/java',querydslSrcDir]
//		}
//	}
//}
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslSrcDir
//}
//
//configurations {
//	querydsl.extendsFrom compileClasspath
//}
//
//tasks.withType (JavaCompile) {
//	options.generatedSourceOutputDirectory = file(querydslSrcDir)
//}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	//runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'com.h2database:h2'

	//junit
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	//Querydsl
//	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}


clean {

}